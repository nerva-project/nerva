name: ci/gh-actions/build

on:
    push:
        paths-ignore:
            - '**.md'
    pull_request:
        paths-ignore:
            - '**.md'
    workflow_dispatch:

env:
    REMOVE_BUNDLED_PACKAGES: sudo rm -rf /usr/local
    SET_APT_CONF: |
        echo "Acquire::Retries \"3\";"         | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::ftp::Timeout \"120\";"  | sudo tee -a /etc/apt/apt.conf.d/80-custom
    CCACHE_SETTINGS: |
        ccache --max-size=150M
        ccache --set-config=compression=true

jobs:
    build-ubuntu:
        runs-on: ubuntu-latest
        env:
            CCACHE_TEMPDIR: /tmp/.ccache-temp
        steps:
            -   uses: actions/checkout@v4
                with:
                    submodules: recursive
            -   uses: actions/cache@v4
                with:
                    path: ~/.ccache
                    key: ccache-${{ runner.os }}-build-${{ matrix.os }}-${{ github.sha }}
                    restore-keys: ccache-${{ runner.os }}-build-${{ matrix.os }}
            -   name: Remove bundled packages
                run: ${{env.REMOVE_BUNDLED_PACKAGES}}
            -   name: Set APT configuration
                run: ${{env.SET_APT_CONF}}
            -   name: Update APT
                run: sudo apt update
            -   name: Install dependencies
                run: sudo apt install -y build-essential cmake ccache pkg-config libboost-all-dev libssl-dev libzmq3-dev libpgm-dev libunbound-dev libsodium-dev git
            -   name: Build
                run: |
                    ${{env.CCACHE_SETTINGS}}
                    make -j3

    build-windows:
        runs-on: windows-latest
        env:
            CCACHE_TEMPDIR: C:\Users\runneradmin\.ccache-temp
        defaults:
            run:
                shell: msys2 {0}
        steps:
            -   uses: actions/checkout@v4
                with:
                    submodules: recursive
            -   uses: actions/cache@v4
                with:
                    path: C:\Users\runneradmin\.ccache
                    key: ccache-${{ runner.os }}-build-${{ github.sha }}
                    restore-keys: ccache-${{ runner.os }}-build-
            -   name: Install dependencies
                uses: msys2/setup-msys2@v2
                with:
                    update: true
                    install: mingw-w64-x86_64-toolchain make mingw-w64-x86_64-cmake mingw-w64-x86_64-ccache mingw-w64-x86_64-boost mingw-w64-x86_64-openssl mingw-w64-x86_64-zeromq mingw-w64-x86_64-libsodium mingw-w64-x86_64-hidapi mingw-w64-x86_64-unbound git
            -   name: Build
                run: |
                    ${{env.CCACHE_SETTINGS}}
                    make release-static-win64 -j2

    build-macos:
        runs-on: macos-latest
        env:
            CCACHE_TEMPDIR: /tmp/.ccache-temp
        steps:
            -   uses: actions/checkout@v4
                with:
                    submodules: recursive
            -   uses: actions/cache@v4
                with:
                    path: /Users/runner/Library/Caches/ccache
                    key: ccache-${{ runner.os }}-build-${{ github.sha }}
                    restore-keys: ccache-${{ runner.os }}-build-
            -   name: Install dependencies
                run: |
                    HOMEBREW_NO_AUTO_UPDATE=1 brew install boost hidapi zmq libpgm miniupnpc ldns expat libunwind-headers protobuf@21 ccache
                    brew link protobuf@21
            -   name: Build
                run: |
                    ${{env.CCACHE_SETTINGS}}
                    make -j3

    libwallet-ubuntu:
        runs-on: ubuntu-latest
        env:
            CCACHE_TEMPDIR: /tmp/.ccache-temp
        steps:
            -   uses: actions/checkout@v4
                with:
                    submodules: recursive
            -   uses: actions/cache@v4
                with:
                    path: ~/.ccache
                    key: ccache-${{ runner.os }}-libwallet-${{ matrix.os }}-${{ github.sha }}
                    restore-keys: ccache-${{ runner.os }}-libwallet-${{ matrix.os }}
            -   name: Remove bundled packages
                run: ${{env.REMOVE_BUNDLED_PACKAGES}}
            -   name: Set APT configuration
                run: ${{env.SET_APT_CONF}}
            -   name: Update APT
                run: sudo apt update
            -   name: Install dependencies
                run: sudo apt install -y build-essential cmake ccache pkg-config libboost-all-dev libssl-dev libzmq3-dev libpgm-dev libunbound-dev libsodium-dev git
            -   name: Build
                run: |
                    ${{env.CCACHE_SETTINGS}}
                    cmake .
                    make wallet_api -j3
